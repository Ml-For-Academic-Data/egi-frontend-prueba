name: CI/CD para el Dashboard de Visualización

on:
  push:
    paths:
      - 'visualization/**'
    branches:
      - main
  pull_request:
    paths:
      - 'visualization/**'
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/egi-dashboard

jobs:
  test:
    name: Pruebas y Calidad de Código
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # ... (Pasos de instalación de Python y dependencias) ...

  build-and-push:
    name: Construir y Publicar Imagen del Dashboard
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    steps:
      - uses: actions/checkout@v4

      # --- PASO NUEVO: INICIAR SESIÓN EN DOCKER HUB ---
      - name: Iniciar sesión en Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # --- Este paso se mantiene: ahora iniciamos sesión en el registry de GitHub ---
      - name: Iniciar sesión en GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: type=sha,prefix=,format=short
      
      - uses: docker/build-push-action@v5
        with:
          context: ./visualization
          file: ./visualization/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  update-manifest:
    name: Actualizar Manifiesto del Frontend
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: Ml-For-Academic-Data/egi-infrastructure-k8s
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
      - name: Actualizar el tag de la imagen
        run: |
          FULL_IMAGE_TAG=${{ needs.build-and-push.outputs.tags }}
          IMAGE_TAG_ONLY=${FULL_IMAGE_TAG##*:}
          echo "Actualizando frontend de desarrollo a la etiqueta: ${IMAGE_TAG_ONLY}"
          sed -i "s|tag:.*|tag: '"${IMAGE_TAG_ONLY}"'|g" charts/frontend/values-desarrollo.yaml
      - name: Hacer Commit y Push de los cambios
        run: |
            git config --global user.name 'GitHub Actions Bot'
            git config --global user.email 'github-actions-bot@github.com'
            git diff --quiet || (git add charts/frontend/values-desarrollo.yaml && git commit -m "ci(frontend): Actualiza imagen de desarrollo a ${{ github.sha }}" && git push)
